TODOS:
refactor shebangs to #!/bin/ash since all of these scripts are made specificly for ash (they should all work in bash though)

reset router to current settings and edit routers web port so i can forward port 80 and still access the router

update all book/audiobook metadata (it all got removed somehow. back this shit up julia!!)

make startup script (see below) and add it to initrc or whatever alpines equivalent is

make caddyfile

add git commit cmd to backup script and add to cronjob (or make a c driver script and add it to init since cron is fucky on alpine)

add aliases for df -h, du -h, ls -l and such. maybe some of my commonly used scripts?

NOTES:
on startup:
mount sda to hdd0 sdc to hdd1 and sdd to hdd2, hdd3 is sde but only should be mounted when i run the backup script (see relevant TODO above)
startup reverse proxy: caddy reverse-proxy --from juliafasick.com --to 127.0.0.1:8096 &
start jellyfin: /opt/jellyfin/jellyfin.sh &

to merge a bunch of audio files
$ cat list.txt
file '/full/path/to/file/1'
file '/full/path/to/file/2'

$ ffmpeg -f concat -safe 0 -i list.txt -c copy out.ogg

got rid of the ddns scripts since my wan ip only changes on some router reboots (pretty much never, its happened once since 11/2023 when there was a massive power outage, so that was probably just the ISP's equipment restarting too), and if i use a dynamic record i cant serve over https since an ssl certificate cant be issued without an apex a record, which cant be done with a dynamic record.
